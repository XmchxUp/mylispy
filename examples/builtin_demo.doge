(let {do (= {x} 100) (x)})
(x) ; Undefined

((flip def) 1 {x})
(print x); 1

(def {define-one} ((flip def) 1))
(define-one {y})
(print y) ; 1

(print (ghost + 2 2)); 4

(print ((unpack *) {2 2})) ; 4
(print (- ((unpack *) {2 2}))) ; -4

(comp - (unpack *))

(def {mul-neg} (comp - (unpack *)))
(print (mul-neg {2 8})) ; -16


(print (map - {5 6 7 8 2 22 44})) ; {-5 -6 -7 -8 -2 -22 -44}


(print {"hello" "world"}) ; {"hello" "world"} ()
(map print {"hello" "world"})   ;"hello"
                                ;"world"
                                ;{() ()}

(print (filter (\ {x} {> x 2}) {5 2 11 -7 8 1})) ; {5 11 8}